// <auto-generated />
using System;
using FarmerMarket.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmerMarket.Migrations
{
    [DbContext(typeof(FarmerMarketContext))]
    partial class FarmerMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("FarmerMarket.Models.Inquiry", b =>
                {
                    b.Property<int>("InquiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RequiredQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InquiryId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("FarmerMarket.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AvailableQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("FarmerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOrganic")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("FarmerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AvailableQuantity = 100.00m,
                            Category = "Vegetable",
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6634),
                            Description = "Farm fresh red tomatoes",
                            FarmerId = 2,
                            IsOrganic = true,
                            Price = 40.00m,
                            ProductName = "Fresh Tomatoes",
                            Unit = "Kg"
                        },
                        new
                        {
                            ProductId = 2,
                            AvailableQuantity = 10.00m,
                            Category = "Grain",
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6638),
                            Description = "Premium quality organic wheat",
                            FarmerId = 2,
                            IsOrganic = true,
                            Price = 2500.00m,
                            ProductName = "Organic Wheat",
                            Unit = "Quintal"
                        },
                        new
                        {
                            ProductId = 3,
                            AvailableQuantity = 50.00m,
                            Category = "Vegetable",
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6641),
                            Description = "Fresh green chillies",
                            FarmerId = 2,
                            IsOrganic = false,
                            Price = 80.00m,
                            ProductName = "Green Chillies",
                            Unit = "Kg"
                        });
                });

            modelBuilder.Entity("FarmerMarket.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6423),
                            Email = "admin@farmermarket.com",
                            Name = "Admin",
                            Password = "admin123",
                            Phone = "9999999999",
                            UserType = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Village Road, Bardoli",
                            City = "Surat",
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6428),
                            Email = "ramesh@gmail.com",
                            Name = "Ramesh Patel",
                            Password = "farmer123",
                            Phone = "9876543210",
                            State = "Gujarat",
                            UserType = "Farmer"
                        },
                        new
                        {
                            UserId = 3,
                            City = "Surat",
                            CreatedAt = new DateTime(2025, 10, 25, 18, 1, 59, 766, DateTimeKind.Local).AddTicks(6430),
                            Email = "suresh@gmail.com",
                            Name = "Suresh Kumar",
                            Password = "buyer123",
                            Phone = "9988776655",
                            State = "Gujarat",
                            UserType = "Buyer"
                        });
                });

            modelBuilder.Entity("FarmerMarket.Models.Inquiry", b =>
                {
                    b.HasOne("FarmerMarket.Models.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmerMarket.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FarmerMarket.Models.Product", b =>
                {
                    b.HasOne("FarmerMarket.Models.User", "Farmer")
                        .WithMany("Products")
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("FarmerMarket.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
